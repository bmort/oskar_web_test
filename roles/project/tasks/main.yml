---
# file: project/tasks/main.yml

- name: Checkout project code
  git:
    repo: https://github.com/bmort/oskar_web_test
    dest: oskar_web.git
    update: yes
    version: HEAD


- name: Update pip
  pip:
    name: pip
    state: latest
  become: True


- name: Install virtualenv
  pip:
    name: virtualenv
    state: latest
  become: True

- name: Install requirements (using virtualenv in the oskar_web.git folder)
  pip:
    requirements: "/home/{{ ansible_user }}/oskar_web.git/oskar_web/requirements.txt"
    virtualenv: "/home/{{ ansible_user }}/oskar_web.git/venv"

# - name: Run gunicorn
#   gunicorn:
#     app: wsgi
#     chdir: /home/vagrant/oskar_web.git/oskar_web
#     conf: /home/vagrant/oskar_web.git/oskar_web/gunicorn.cfg.py
#     venv: /home/vagrant/oskar_web.git/venv

- name: Create oskar web systemd service from template
  template:
      src: oskar_web.service.j2
      dest: /etc/systemd/system/oskar.service
      owner: root
      group: root
      mode: '0644'
  become: True

- name: Create nginx config for oskar website from template
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/conf.d/oskar.conf
    owner: root
    group: root
    mode: '0644'
  become: True

- name: Make sure the oskar systemd gunicorn service is started and enabled
  systemd:
    state: started
    name: oskar
    enabled: yes
  become: True


# ----------------------------------------------------------------------------
# https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-centos-7
#
# TODO: Setup SELinux policy for nginx to access the oskar gunicorn socket
# -----------------------------------------------------------------------------
# check this worked with: groups nginx
# After this command nginx should be in the groups: nginx and the default users group
- name: Add user to nginx user to ansible_user users group
  user:
    name: nginx
    groups: "{{ ansible_users_group }}"
    append: yes
  become: True

- name: give execute permissions to home
  file:
    path: "/home/{{ ansible_user }}"
    mode: 0710

# -------- SELinux policy ------------

- name: Install SELinux policy tools
  become: True
  yum:
    name: policycoreutils-python
    state: installed

- name: Remove SELinux policy package
  command: semodule -r nginx
  failed_when: false
  become: True

- name: Copy SELinux type enforcement file
  copy:
    src: "{{ role_path }}/files/nginx.te"
    dest: /tmp/

- name: Compile SELinux module file
  command: checkmodule -M -m -o /tmp/nginx.mod /tmp/nginx.te

- name: Build SELinux policy package
  command: semodule_package -o /tmp/nginx.pp -m /tmp/nginx.mod

- name: Load SELinux policy package
  command: semodule -i /tmp/nginx.pp
  become: True

- name: Remove temp files
  file:
    path: /tmp/nginx.*
    state: absent

# -------- Start NGINX ------------

- name: Make sure nginx service is started, enabled on restart.
  systemd:
    state: restarted
    name: nginx
    enabled: yes
  become: True
